services:
  db:
    container_name: db
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default
    env_file:
      - .env

  redis-server:
    container_name: redis-server
    command: redis-server
    image: redis
    networks:
      - default

  django:
    container_name: django
    build: ./Django
    command: bash -c "python manage.py makemigrations Auth Chat Game Notification WebApp && python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./Django/Code/:/code/
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
    depends_on:
      - db
      - redis-server
    hostname: django
    restart: always
    networks:
      - default
    env_file:
      - .env
    ports:
      - 8000:8000

  web:
    container_name: Nginx
    build: ./Nginx
    ports:
      - 443:443
      - 80:80
      - 3000:3000
    restart: always
    hostname: Nginx
    volumes:
      - ./Django/Code/static/:/static/
      - ./Django/Code/media/:/media/
    networks:
      - default
    depends_on:
      - django
    env_file:
      - .env

  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    networks:
      - default

volumes:
  static_volume:
  pgadmin:
  postgres_data:
  portainer_data:

networks:
  default: